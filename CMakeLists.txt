cmake_minimum_required(VERSION 3.28)
project(LearnIntrinsics)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# add debug to release and turn on auto-vec report
if (MSVC)
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /Zi")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /Zi")
    add_compile_options(/Qvec-report:2)
else ()
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -g")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -g")
    if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
        add_compile_options(-fopt-info-vec-optimized)
    elseif (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
        add_compile_options(-Rpass=loop-vectorize)
    endif ()
endif ()

include_directories(src)

function(add_vectorized_target target_name flag_list src)
    add_executable(${target_name} ${src})
    target_compile_options(${target_name} PRIVATE ${flag_list})
    message(STATUS "Added target ${target_name} with flags: ${flag_list}")
endfunction()

function(add_vectorized_targets src)
    get_filename_component(base ${src} NAME_WE)
    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang|AppleClang")
        add_vectorized_target(${base} "" ${src})
        add_vectorized_target(${base}_sse "-msse4.2" ${src})
        add_vectorized_target(${base}_avx "-mavx" ${src})
        add_vectorized_target(${base}_avx2 "-mavx2" ${src})
        add_vectorized_target(${base}_avx512 "-mavx512f" ${src})
    elseif (MSVC)
        add_vectorized_target(${base} "" ${src})
        add_vectorized_target(${base}_sse "/arch:SSE4.2" ${src})
        add_vectorized_target(${base}_avx "/arch:AVX" ${src})
        add_vectorized_target(${base}_avx2 "/arch:AVX2" ${src})
        add_vectorized_target(${base}_avx512 "/arch:AVX512" ${src})
    endif ()
endfunction()

function(add_amx_targets src)
    if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang|AppleClang")
        add_executable(amx_example src)
        target_compile_options(amx_example PRIVATE "-mamx-tile -mamx-int8 -mamx-bf16")
    elseif (MSVC)
        message(WARNING "MSVC not support AMX yet, skip amx_example")
    endif ()
endfunction()

add_vectorized_targets(src/002-sse-avx/auto_vectorization.cpp)
add_amx_targets(src/003-amx/amx_example.cpp)
